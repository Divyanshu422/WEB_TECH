{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshutyagi/Desktop/GIT HUB/WEB_TECH/4. Fomik_Library/src/components/YoutubeForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YoutubeForm() {\n  _s();\n  /* \n      * Calling the useFormik hook which takes object and return a object.\n      * the first property used in the useFormik hook is initialValue (CamelCase)\n  */\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      channel: ''\n    },\n    onSubmit: values => {\n      console.log('Values are ', values);\n    },\n    validate: () => {}\n  });\n  console.log(formik.values);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channel\",\n        children: \"Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channel\",\n        name: \"channel\",\n        placeholder: \"YouTube channel name\",\n        onChange: formik.handleChange,\n        value: formik.values.channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YoutubeForm;\nexport default YoutubeForm;\nvar _c;\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","YoutubeForm","_s","formik","initialValues","name","email","channel","onSubmit","values","console","log","validate","children","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/divyanshutyagi/Desktop/GIT HUB/WEB_TECH/4. Fomik_Library/src/components/YoutubeForm.js"],"sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nfunction YoutubeForm() {\n    /* \n        * Calling the useFormik hook which takes object and return a object.\n        * the first property used in the useFormik hook is initialValue (CamelCase)\n    */\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '', \n            channel: ''\n        },\n        onSubmit: values => {\n            console.log('Values are ', values);\n        },\n        validate: () => {\n\n        }\n            \n\n    })\n\n\n\n\n    console.log(formik.values);\n\n  return (\n    <div>\n        <form onSubmit={formik.handleSubmit}>\n             {/* Adding the html skeleton */}\n            <label htmlFor='name'>Name</label>\n            <input type='text' id='name' name='name' onChange={formik.handleChange} value={formik.values.name}/>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' name='email' onChange={formik.handleChange} value={formik.values.email} />\n            <label htmlFor='channel'>Channel</label>\n            <input type='text'id='channel' name='channel' placeholder='YouTube channel name' onChange={formik.handleChange} value={formik.values.channel}/>\n            <button type='submit'>Submit</button>\n        </form>      \n    </div>\n  )\n}\n\nexport default YoutubeForm"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB;AACJ;AACA;AACA;EACI,MAAMC,MAAM,GAAGL,SAAS,CAAC;IACrBM,aAAa,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC;IACDC,QAAQ,EAAEC,MAAM,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,MAAM,CAAC;IACtC,CAAC;IACDG,QAAQ,EAAEA,CAAA,KAAM,CAEhB;EAGJ,CAAC,CAAC;EAKFF,OAAO,CAACC,GAAG,CAACR,MAAM,CAACM,MAAM,CAAC;EAE5B,oBACET,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAMQ,QAAQ,EAAEL,MAAM,CAACW,YAAa;MAAAD,QAAA,gBAEhCb,OAAA;QAAOe,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClCnB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAAChB,IAAI,EAAC,MAAM;QAACiB,QAAQ,EAAEnB,MAAM,CAACoB,YAAa;QAACC,KAAK,EAAErB,MAAM,CAACM,MAAM,CAACJ;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpGnB,OAAA;QAAOe,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCnB,OAAA;QAAOoB,IAAI,EAAC,OAAO;QAACC,EAAE,EAAC,OAAO;QAAChB,IAAI,EAAC,OAAO;QAACiB,QAAQ,EAAEnB,MAAM,CAACoB,YAAa;QAACC,KAAK,EAAErB,MAAM,CAACM,MAAM,CAACH;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzGnB,OAAA;QAAOe,OAAO,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxCnB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAAAC,EAAE,EAAC,SAAS;QAAChB,IAAI,EAAC,SAAS;QAACoB,WAAW,EAAC,sBAAsB;QAACH,QAAQ,EAAEnB,MAAM,CAACoB,YAAa;QAACC,KAAK,EAAErB,MAAM,CAACM,MAAM,CAACF;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/InB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CAxCQD,WAAW;EAAA,QAKDH,SAAS;AAAA;AAAA4B,EAAA,GALnBzB,WAAW;AA0CpB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}